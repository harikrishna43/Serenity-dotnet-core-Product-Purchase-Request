{
  "version": 3,
  "sources": ["../../../../../Modules/ProductPurchaseRequestDB/ProductPurchaseRequest/ProductPurchaseRequestPage.tsx", "../../../../../Modules/ServerTypes/ProductPurchaseRequestDB/ProductPurchaseRequestColumns.ts", "../../../../../Modules/ServerTypes/ProductPurchaseRequestDB/ProductPurchaseRequestForm.ts", "../../../../../Modules/ServerTypes/ProductPurchaseRequestDB/ProductPurchaseRequestRow.ts", "../../../../../Modules/ServerTypes/ProductPurchaseRequestDB/ProductPurchaseRequestService.ts", "../../../../../Modules/ProductPurchaseRequestDB/ProductPurchaseRequest/ProductPurchaseRequestGrid.tsx", "../../../../../Modules/ProductPurchaseRequestDB/ProductPurchaseRequest/ProductPurchaseRequestDialog.tsx"],
  "sourcesContent": ["\uFEFFimport { gridPageInit } from '@serenity-is/corelib';\r\nimport { ProductPurchaseRequestGrid } from './ProductPurchaseRequestGrid';\r\n\r\nexport default () => gridPageInit(ProductPurchaseRequestGrid);", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { ProductPurchaseRequestRow } from \"./ProductPurchaseRequestRow\";\n\nexport interface ProductPurchaseRequestColumns {\n    PurchaseRequestId: Column<ProductPurchaseRequestRow>;\n    UserId: Column<ProductPurchaseRequestRow>;\n    ProductName: Column<ProductPurchaseRequestRow>;\n    Status: Column<ProductPurchaseRequestRow>;\n    Attachment: Column<ProductPurchaseRequestRow>;\n    CreatedDate: Column<ProductPurchaseRequestRow>;\n}\n\nexport class ProductPurchaseRequestColumns extends ColumnsBase<ProductPurchaseRequestRow> {\n    static readonly columnsKey = 'ProductPurchaseRequestDB.ProductPurchaseRequest';\n    static readonly Fields = fieldsProxy<ProductPurchaseRequestColumns>();\n}", "\uFEFFimport { StringEditor, MultipleImageUploadEditor, DateEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface ProductPurchaseRequestForm {\n    ProductName: StringEditor;\n    Status: StringEditor;\n    Attachment: MultipleImageUploadEditor;\n    CreatedDate: DateEditor;\n}\n\nexport class ProductPurchaseRequestForm extends PrefixedContext {\n    static readonly formKey = 'ProductPurchaseRequestDB.ProductPurchaseRequest';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ProductPurchaseRequestForm.init)  {\n            ProductPurchaseRequestForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = MultipleImageUploadEditor;\n            var w2 = DateEditor;\n\n            initFormType(ProductPurchaseRequestForm, [\n                'ProductName', w0,\n                'Status', w0,\n                'Attachment', w1,\n                'CreatedDate', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ProductPurchaseRequestRow {\n    PurchaseRequestId?: number;\n    UserId?: number;\n    ProductName?: string;\n    Status?: string;\n    Attachment?: string;\n    CreatedDate?: string;\n}\n\nexport abstract class ProductPurchaseRequestRow {\n    static readonly idProperty = 'PurchaseRequestId';\n    static readonly nameProperty = 'ProductName';\n    static readonly localTextPrefix = 'ProductPurchaseRequestDB.ProductPurchaseRequest';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ProductPurchaseRequestRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ProductPurchaseRequestRow } from \"./ProductPurchaseRequestRow\";\n\nexport namespace ProductPurchaseRequestService {\n    export const baseUrl = 'ProductPurchaseRequestDB/ProductPurchaseRequest';\n\n    export declare function Create(request: SaveRequest<ProductPurchaseRequestRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<ProductPurchaseRequestRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProductPurchaseRequestRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<ProductPurchaseRequestRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProductPurchaseRequestRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<ProductPurchaseRequestRow>>;\n\n    export const Methods = {\n        Create: \"ProductPurchaseRequestDB/ProductPurchaseRequest/Create\",\n        Update: \"ProductPurchaseRequestDB/ProductPurchaseRequest/Update\",\n        Delete: \"ProductPurchaseRequestDB/ProductPurchaseRequest/Delete\",\n        Retrieve: \"ProductPurchaseRequestDB/ProductPurchaseRequest/Retrieve\",\n        List: \"ProductPurchaseRequestDB/ProductPurchaseRequest/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ProductPurchaseRequestService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ProductPurchaseRequestColumns, ProductPurchaseRequestRow, ProductPurchaseRequestService } from '@/ServerTypes/ProductPurchaseRequestDB';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { ProductPurchaseRequestDialog } from './ProductPurchaseRequestDialog';\r\n\r\n@Decorators.registerClass('ProductPurchaseApp.ProductPurchaseRequestDB.ProductPurchaseRequestGrid')\nexport class ProductPurchaseRequestGrid extends EntityGrid<ProductPurchaseRequestRow> {\n    protected getColumnsKey() { return ProductPurchaseRequestColumns.columnsKey; }\n    protected getDialogType() { return ProductPurchaseRequestDialog; }\n    protected getRowDefinition() { return ProductPurchaseRequestRow; }\n    protected getService() { return ProductPurchaseRequestService.baseUrl; }\n}", "\uFEFFimport { ProductPurchaseRequestForm, ProductPurchaseRequestRow, ProductPurchaseRequestService } from '@/ServerTypes/ProductPurchaseRequestDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('ProductPurchaseApp.ProductPurchaseRequestDB.ProductPurchaseRequestDialog')\nexport class ProductPurchaseRequestDialog extends EntityDialog<ProductPurchaseRequestRow, any> {\n    protected getFormKey() { return ProductPurchaseRequestForm.formKey; }\n    protected getRowDefinition() { return ProductPurchaseRequestRow; }\n    protected getService() { return ProductPurchaseRequestService.baseUrl; }\n\n    protected form = new ProductPurchaseRequestForm(this.idPrefix);\n}"],
  "mappings": "0FAAC,IAAAA,EAA6B,SCA7B,IAAAC,EAAyC,SAanC,IAAMC,EAAN,MAAMA,UAAsC,aAAuC,CAG1F,EAH0FC,EAAAD,EAAA,iCAA7EA,EACO,WAAa,kDADpBA,EAEO,UAAS,eAA2C,EAFjE,IAAME,EAANF,ECbN,IAAAG,EAAmG,SAS7F,IAAMC,EAAN,MAAMA,UAAmC,iBAAgB,CAI5D,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAA2B,KAAO,CACnCA,EAA2B,KAAO,GAElC,IAAIE,EAAK,eACLC,EAAK,4BACLC,EAAK,gBAET,gBAAaJ,EAA4B,CACrC,cAAeE,EACf,SAAUA,EACV,aAAcC,EACd,cAAeC,CACnB,CAAC,CACL,CACJ,CACJ,EAtBgEC,EAAAL,EAAA,8BAAnDA,EACO,QAAU,kDADvB,IAAMM,EAANN,ECTN,IAAAO,EAA4B,SAWtB,IAAeC,EAAf,MAAeA,CAA0B,CAUhD,EAVgDC,EAAAD,EAAA,6BAA1BA,EACF,WAAa,oBADXA,EAEF,aAAe,cAFbA,EAGF,gBAAkB,kDAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAuC,EAT7D,IAAeE,EAAfF,ECXN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,kDAQVA,EAAA,QAAU,CACnB,OAAQ,yDACR,OAAQ,yDACR,OAAQ,yDACR,SAAU,2DACV,KAAM,sDACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAA+BC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACzD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SADzC,IAAAC,EAAAC,EAAAC,EAGAF,EAAA,CAAC,aAAW,cAAc,0EAA0E,GAC7F,IAAMG,EAAN,MAAMA,UAAqCD,EAAA,eAA6C,CAAxF,kCAKH,KAAU,KAAO,IAAIE,EAA2B,KAAK,QAAQ,EAJnD,YAAa,CAAE,OAAOA,EAA2B,OAAS,CAC1D,kBAAmB,CAAE,OAAOC,CAA2B,CACvD,YAAa,CAAE,OAAOC,EAA8B,OAAS,CAG3E,EANOL,EAAAM,EAAAL,GAAMC,EAANK,EAAAP,EAAA,iCADPD,EACaG,GAAkFM,EAAAN,EAAA,gCAAxFO,EAAAT,EAAA,EAAME,GAAN,IAAMQ,EAANR,EDJP,IAAAS,EAAAC,EAAAC,EAIAF,EAAA,CAAC,aAAW,cAAc,wEAAwE,GAC3F,IAAMG,EAAN,MAAMA,UAAmCD,EAAA,aAAsC,CACxE,eAAgB,CAAE,OAAOE,EAA8B,UAAY,CACnE,eAAgB,CAAE,OAAOC,CAA8B,CACvD,kBAAmB,CAAE,OAAOC,CAA2B,CACvD,YAAa,CAAE,OAAOC,EAA8B,OAAS,CAC3E,EALON,EAAAO,EAAAN,GAAMC,EAANM,EAAAR,EAAA,+BADPD,EACaG,GAAyEO,EAAAP,EAAA,8BAA/EQ,EAAAV,EAAA,EAAME,GAAN,IAAMS,EAANT,ELFP,IAAOU,GAAQC,EAAA,OAAM,gBAAaC,CAA0B,EAA7C",
  "names": ["import_corelib", "import_corelib", "_ProductPurchaseRequestColumns", "__name", "ProductPurchaseRequestColumns", "import_corelib", "_ProductPurchaseRequestForm", "prefix", "w0", "w1", "w2", "__name", "ProductPurchaseRequestForm", "import_corelib", "_ProductPurchaseRequestRow", "__name", "ProductPurchaseRequestRow", "import_corelib", "ProductPurchaseRequestService", "x", "r", "s", "o", "import_corelib", "import_corelib", "_ProductPurchaseRequestDialog_decorators", "_init", "_a", "_ProductPurchaseRequestDialog", "ProductPurchaseRequestForm", "ProductPurchaseRequestRow", "ProductPurchaseRequestService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ProductPurchaseRequestDialog", "_ProductPurchaseRequestGrid_decorators", "_init", "_a", "_ProductPurchaseRequestGrid", "ProductPurchaseRequestColumns", "ProductPurchaseRequestDialog", "ProductPurchaseRequestRow", "ProductPurchaseRequestService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ProductPurchaseRequestGrid", "ProductPurchaseRequestPage_default", "__name", "ProductPurchaseRequestGrid"]
}
